import logging
import random, time
from datetime import datetime
from odoo import api, models
_logger = logging.getLogger(__name__)

class RtxDtuDataService(models.AbstractModel):
    _inherit = 'dtu.data.service'

    def start_service_demo(self):
        explain_obj = self.env['dtu.data']
        imeis = [
            ['新疆线路1', '863482067865689', '44.3205343504481', '89.3099584704077'],
            ['新疆线路1', '863482067865690', '44.3829801941349', '89.3369683715185'],
            ['新疆线路1', '863482067865691', '44.4279297423072', '89.3370304367216'],
            ['新疆线路1', '863482067865692', '44.4600190759255', '89.3624319692118'],
            ['新疆线路1', '863482067865693', '44.4891646439968', '89.4075003574451'],
            ['新疆线路1', '863482067865694', '44.508953685894', '89.4534074353228'],
            ['新疆线路1', '863482067865695', '44.5246668646336', '89.4854102279479'],
            ['新疆线路1', '863482067865696', '44.5409530111931', '89.5198969358647'],

            ['新疆线路2', '863482067865697', '44.7906813064407', '88.7326015255042'],
            ['新疆线路2', '863482067865698', '44.8119298138776', '88.6545492627515'],
            ['新疆线路2', '863482067865699', '44.810444399436', '88.5975188239167'],
            ['新疆线路2', '863482067865700', '44.8116773177872', '88.4954363487061'],
            ['新疆线路2', '863482067865701', '44.8306806538559', '88.4302574901839'],
            ['新疆线路2', '863482067865702', '44.8788003799357', '88.3758352326556'],
            ['新疆线路2', '863482067865703', '44.8963595089817', '88.3185370724696'],
            ['新疆线路2', '863482067865704', '44.9066497775628', '88.2271219650494'],
            ['新疆线路2', '863482067865705', '44.9083299424051', '88.1317009758892'],
            ['新疆线路2', '863482067865706', '44.8987297964667', '88.0644999230135'],

            ['新疆线路3', '863482067865707', '44.7889903963706', '88.7191690179985'],
            ['新疆线路3', '863482067865708', '44.8032092067848', '88.5984825794933'],
            ['新疆线路3', '863482067865709', '44.8173185444187', '88.4581635156102'],
            ['新疆线路3', '863482067865710', '44.8312546081822', '88.3177840796085'],
            ['新疆线路3', '863482067865711', '44.8357504899088', '88.1740973895832'],
            ['新疆线路3', '863482067865712', '44.8560284737808', '87.9518672291614'],
            ['新疆线路3', '863482067865713', '44.8715518289764', '87.7883105212732'],
            ['新疆线路3', '863482067865714', '44.903080206733', '87.6276756212078'],

            ['新疆线路4', '863482067865715', '44.7843898445661', '88.709350000627'],
            ['新疆线路4', '863482067865716', '44.7755670664391', '88.5168078896571'],
            ['新疆线路4', '863482067865717', '44.7733675869052', '88.3373916100577'],
            ['新疆线路4', '863482067865718', '44.7547301521471', '88.1939140860125'],
            ['新疆线路4', '863482067865719', '44.7544183432007', '88.0438974559874'],
            ['新疆线路4', '863482067865720', '44.7492213734613', '87.8808463202668'],
            ['新疆线路4', '863482067865721', '44.7255238302883', '87.7669006419487'],
        ]
        for imei in imeis:
            _logger.info(imei)
            # current_time = (datetime.datetime.utcnow() + datetime.timedelta(hours=8)).strftime("%Y-%m-%d %H:%M:%S")
            pv = {
                "name": imei[0],
                "imei": imei[1],
                "time": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
                "Model": False,
                "Version": False,
                "Running_time": False,
                "Remaining_memory": False,
                "Signal_strength": False,
                "Pressure": random.randint(90, 105),     # 压力
                "Traffic": random.randint(200, 300),     # 流量
                "Liquid_level": random.randint(50, 70),     # 液位
                "Temperature": random.randint(30, 55),     # 温度
                "Atmospheric_pressure": random.randint(10, 25),     # 气压
                "Humidity": random.randint(40, 70),     # 湿度
                "gps_Longitude": False,
                "gps_Latitude": False,
                "gsm_Longitude": imei[2],
                "gsm_Latitude": imei[3],
            }
            _logger.info(pv)
            try:
                # 直接使用 pv 字典创建记录
                record = explain_obj.create(pv)
                if record:
                    _logger.info("Data created successfully.")
                    # 手动提交事务，确保数据实时写入
                    self.env.cr.commit()
                else:
                    _logger.error("Failed to create data.")
            except Exception as e:
                _logger.error(f"Error creating data: {e}")
                # 回滚事务，防止数据不一致
                self.env.cr.rollback()
            time.sleep(10)


